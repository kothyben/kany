---
- name: SELECT IMPORTANT FOLDERS AND FILES  - SHARED FOLDERS - PULL FODLERS AND FILES TO WINDOWS
  hosts: all
  gather_facts: False
  become: True
  become_method: runas

  vars:
    ansible_become_user: '{{ ansible_user }}'
    ansible_become_pass: '{{ ansible_password }}'

  vars_files:
    - ./external_vars.yml

  tasks:
    
    #-------------------------- CHECK DIRECTORY WORKSPACE 

    - name: "Current Directory on Linux"
      command: pwd
      register: dir_linux
      when: "'linux' in group_names"

    - name: "Current directory into Windows machine"
      win_shell: |
        echo $pwd
      register: current_dir_windows
      when: "'windows' in group_names "

    - name: "Set 'dir' variable for Linux hosts"
      set_fact:
        dir: "{{ dir_linux.stdout }}"
      when: "'linux' in group_names"

    - name: "Set 'dir' variable for Windows hosts"
      set_fact:
        dir: "{{ current_dir_windows.stdout_lines }}"
      when: "'windows' in group_names "

    - debug:
        var: dir


    # ----------------------------- CREATE AND COPY POWERSHELL SCRIPT FOR ACCESSING TO SHARED FOLDER

    - name: " Create PowerShell script template in local controller node"
      template:
        src: ../templates/shared_folder.ps1.j2
        dest: shared_folder.ps1
        mode: 0755
      when: " 'linux' in group_names "     

    - name: "Copy ps1 file from local Linux to target Windows machine"
      win_copy:
        src: shared_folder.ps1
        dest: "{{ destination_directory }}"
      when: "'windows' in group_names and inventory_hostname !=  source_host "

    - name: " check powershell script  copied"
      win_shell: 'Set-Location "{{ destination_directory }}"; dir'
      register: fileCopied
      when: "'windows' in group_names and inventory_hostname !=  source_host  "
    - debug:
        var: fileCopied.stdout_lines
      when: "'windows' in group_names and inventory_hostname !=  source_host  "


    
    #-------------------------------------------- CHECK SHARED FOLDERS 
    
    - name: CREATE TEMP DIRECTORY ON WINDOWS IF NOT EXISTS
      win_file:
        path: "{{ destination_directory }}/temp_folder"
        state: directory
      when: "'windows' in group_names and inventory_hostname == source_host  "

    - name:  SHARE THIS FOLDER FROM WINDOWS SOURCE IF NOT ALREADY
      debug:
        msg: " I need to create task to chare folder "

    - name: " Check shared_folder contents "
      win_shell: 'dir "{{ folder_final }}"'
      register: folderShared
      when: "'windows' in group_names and inventory_hostname == source_host "
    - debug:
        var: folderShared.stdout_lines
      when: "'windows' in group_names and inventory_hostname == source_host "


    # ----------------------------- COPY MULTIPLE FILES FROM WINDOWS TO LINUX 
    
    - name:  SEE IMPORTANT FOLDERS OR  FILES  TO COPY
      win_shell: |
        chdir '{{ source_directory }}'
        dir
      register: folders_to_copy
      when: "'windows' in group_names and inventory_hostname == source_host "
    - debug:
        msg: "{{ folders_to_copy.stdout_lines}}"
      when: "'windows' in group_names and inventory_hostname == source_host "

    - name: COPY IMPORTANT FOLDERS  TO SHARED TEMP DIRECTPRY
      win_copy:
        src: '{{ source_directory }}'
        dest: "{{ folder_final }}"
        remote_src: yes
      when: "'windows' in group_names and inventory_hostname == source_host "
   
    - name: FIND ALL FILES INTO SHARED DIRECTORY ON SOURCE Windows NODE
      win_find:
        paths: '{{ folder_final }}'
        file_type: file
      register: found_files
      when: inventory_hostname == source_host
    - debug:
        var: filenames_list
      vars:
        filenames_list: "{{ found_files.files | map(attribute='filename') | list }}"
      when: inventory_hostname == source_host

    - name: CREATE DIRECTORY INTO LOCAL CONTROLLER NODE
      file:
        state: directory
        mode: 0777
        path: "{{ workspace }}/dossiers_tmp_from_windows"
      when: "'linux' in group_names "

    - name: FETCH MULTIPLE FILES  FROM WINDOWS TO LOCAL CONTROLLER 
      vars:
        filenames_list: "{{ found_files.files | map(attribute='filename') | list }}"
      fetch:
        src: "{{ destination_directory }}temp_folder\\{{ item }}"
        dest: "{{ workspace }}/dossiers_tmp_from_windows/"
        flat: yes
      when: "'windows' in group_names and inventory_hostname == source_host "
      loop: "{{ filenames_list }}"


